{
    "collab_server" : "",
    "contents" : "### R code from vignette source 'RSeminar2.Rnw'\n\nsetwd(\"\")\n\n###################################################\n### code chunk number 11: RSeminar2.Rnw:193-195\n###################################################\n5L\nas.integer(5.0)\n\n\n###################################################\n### code chunk number 12: RSeminar2.Rnw:198-201\n###################################################\n5.25\npi\nas.numeric(1L)\n\n\n###################################################\n### code chunk number 13: RSeminar2.Rnw:210-212\n###################################################\n\"hello world\"\nas.character(1.0)\n\n\n###################################################\n### code chunk number 14: RSeminar2.Rnw:215-218\n###################################################\nTRUE\n1 > 2\nas.logical(1L)\n\n\n###################################################\n### code chunk number 15: RSeminar2.Rnw:227-229\n###################################################\nNA\nis.na(NA)\n\n\n###################################################\n### code chunk number 16: RSeminar2.Rnw:232-234\n###################################################\nNULL\nis.null(NULL)\n\n\n###################################################\n### code chunk number 17: RSeminar2.Rnw:241-242 \n###################################################\nrm(list=ls())\n\n\n###################################################\n### code chunk number 18: RSeminar2.Rnw:244-248\n###################################################\nx1= 1/3\nx2 <- 1/6\n1/2 -> x3\nclass(x1)\n\n\n###################################################\n### code chunk number 19: RSeminar2.Rnw:252-253\n###################################################\n(x1+x2-2*x3)*0.1\n\n\n###################################################\n### code chunk number 20: RSeminar2.Rnw:260-263\n###################################################\nv1=c(1,2,4,6)\nv2=1:4\n( v3=0:3*5+1 )\n\n\n###################################################\n### code chunk number 21: RSeminar2.Rnw:267-270\n###################################################\n( v1 = c(x1=1,x2=2,x3=4,x4=6) )\nnames(v2) = c(\"x1\",\"x2\",\"x3\",\"x4\"); print(v2)\nnames(v3) = paste(\"x\",1:4,sep=\"\"); print(v3)\n\n\n###################################################\n### code chunk number 22: RSeminar2.Rnw:278-283\n###################################################\nv1[4]\nv1[\"x4\"]\nv1[3:4]\nv1[c(1,2,4)]\nv1[-c(1,2,4)]\n\n\n###################################################\n### code chunk number 23: RSeminar2.Rnw:290-294\n###################################################\n( v4 = c(\"Hello\",\"World\") )\nclass(v4)\n( v5 = rep(TRUE,4) )\nclass(v5)\n\n\n###################################################\n### code chunk number 24: RSeminar2.Rnw:300-301\n###################################################\n( fac1= factor(rep(1:3,3),labels=paste(\"Drug\",1:3,sep=\"\")) )\n\n\n###################################################\n### code chunk number 25: RSeminar2.Rnw:304-306\n###################################################\nlevels(fac1) = paste(\"Drug\",3:1,sep=\"\")\nfac1\n\n\n###################################################\n### code chunk number 26: RSeminar2.Rnw:313-316\n###################################################\n( mat1 = matrix(0L,2,3) )\n( mat2 = matrix(1:6,2,3) )\n( mat3 = matrix(1:6,2,3,byrow=TRUE) )\n\n\n###################################################\n### code chunk number 27: RSeminar2.Rnw:322-325\n###################################################\nrownames(mat2)=paste(\"row\",1:2)\ncolnames(mat2)=paste(\"column\",1:3)\nmat2\n\n\n###################################################\n### code chunk number 28: RSeminar2.Rnw:331-335\n###################################################\nmat2[2,3]\nmat2[\"row 2\",\"column 3\"]\nmat2[6]\nmat2[,c(1,3)]\n\n\n###################################################\n### code chunk number 29: RSeminar2.Rnw:343-350\n###################################################\nrequire(\"Matrix\")\nmat4 = matrix(0,1000,50)\nmat5 = Matrix(0,1000,50,sparse=TRUE)\nclass(mat4)\nobject.size(mat4)\nclass(mat5)\nobject.size(mat5)\n\n\n###################################################\n### code chunk number 30: RSeminar2.Rnw:383-392 \n###################################################\n# require(\"bigalgebra\")\n# mat6 = matrix(1.0,5000,5000)\n# mat7 = as.big.matrix(mat6)\n# object.size(mat6);object.size(mat7)\n# #200MB vs. 0.6KB\n# system.time(mat6%*%mat6)\n# system.time(mat7%*%mat7)\n\n\n###################################################\n### code chunk number 31: RSeminar2.Rnw:398-399\n###################################################\n( arr1 = array(1:12,c(2,3,2)) )\n\n\n###################################################\n### code chunk number 32: RSeminar2.Rnw:405-407\n###################################################\narr1[2,1,1]\narr1[1,,2]\n\n\n###################################################\n### code chunk number 33: RSeminar2.Rnw:413-414\n###################################################\nset.seed(1) \n\n\n###################################################\n### code chunk number 34: RSeminar2.Rnw:416-421\n###################################################\n( df1 = data.frame(id=1:6,\n          gender=factor(rep(c(\"M\",\"F\"),3)),\n          treatment1=factor(rep(LETTERS[1:3],2)),\n          treatment2=factor(rep(LETTERS[1:2],each=3)),\n          response=rnorm(6)) )\n\n\n###################################################\n### code chunk number 35: RSeminar2.Rnw:429-432\n###################################################\ndf1$treatment1\ndf1[,\"treatment1\"]\ndf1[,3]\n\n\n###################################################\n### code chunk number 36: RSeminar2.Rnw:439-444\n###################################################\nls1 = list()\nls1[[1]] = \"Hello World\"\nls1[[2]] = pi\nls1[[3]] = matrix(1:4,2,2)\nprint(ls1)\n\n\n###################################################\n### code chunk number 37: RSeminar2.Rnw:451-456\n###################################################\nDRfun = function(dose){\n  return( 1-exp(-2.18E-04*dose) )\n}\nDRfun(3.18E+03)\nDRfun(1+03)\n\n\n###################################################\n### code chunk number 38: RSeminar2.Rnw:462-466\n###################################################\nDRfun = function(dose,K){\n  return( 1-exp(-K*dose) )\n}\nDRfun(1e3,2e-4)\n\n\n###################################################\n### code chunk number 39: RSeminar2.Rnw:473-474\n###################################################\ndf1[which(df1$response<0),]\n\n\n###################################################\n### code chunk number 40: RSeminar2.Rnw:480-481\n###################################################\nwith(df1,response[which(treatment1==\"C\")])\n\n\n###################################################\n### code chunk number 41: RSeminar2.Rnw:485-486\n###################################################\nwith(df1,by(response,gender,mean))\n\n\n###################################################\n### code chunk number 42: RSeminar2.Rnw:502-505\n###################################################\nfor(i in 1:4){\n  print(i^2)\n}\n\n\n###################################################\n### code chunk number 43: RSeminar2.Rnw:511-515\n###################################################\nx = c(1,2,4,8,16)\nfor(i in x){\n  print(log2(i))\n}\n\n\n###################################################\n### code chunk number 44: RSeminar2.Rnw:521-526\n###################################################\ncount=0\nwhile(count<5){\n  print(count)\n  count = count + 1\n}\n\n\n###################################################\n### code chunk number 45: RSeminar2.Rnw:531-537\n###################################################\nset.seed(1)\nx=0\nwhile(x<0.5){\n  x = rnorm(1)\n  print(x)\n}\n\n\n###################################################\n### code chunk number 46: RSeminar2.Rnw:543-550\n###################################################\nset.seed(1)\nuu = runif(1)\nif(uu < 0.5){\n  print(\"heads\")\n}else{\n  print(\"tails\")\n}\n\n\n###################################################\n### code chunk number 47: RSeminar2.Rnw:556-560\n###################################################\nset.seed(1)\nuu = runif(1)\nresult = ifelse(uu < 0.5, \"heads\", \"tails\")\nprint(result)\n\n\n###################################################\n### code chunk number 48: RSeminar2.Rnw:593-597 \n###################################################\nsleepstudy = read.csv(\"http://myweb.uiowa.edu/dksewell/sleepstudy.csv\")\ntest = read.table(\"http://myweb.uiowa.edu/dksewell/sleepstudy.csv\",\n                       sep=\",\",header=TRUE)\nall.equal(sleepstudy,test)\n\n\n###################################################\n### code chunk number 49: RSeminar2.Rnw:611-612\n###################################################\nhead(sleepstudy)\n\n\n###################################################\n### code chunk number 50: RSeminar2.Rnw:619-620\n###################################################\ntail(sleepstudy)\n\n\n###################################################\n### code chunk number 51: RSeminar2.Rnw:627-628 \n###################################################\nView(sleepstudy)  #In RStudio only\n\n\n###################################################\n### code chunk number 52: RSeminar2.Rnw:635-636 \n###################################################\nprint(sleepstudy)\n\n\n###################################################\n### code chunk number 53: RSeminar2.Rnw:643-644\n###################################################\ncolnames(sleepstudy)\n\n\n###################################################\n### code chunk number 54: RSeminar2.Rnw:651-652\n###################################################\nstr(sleepstudy)\n\n\n###################################################\n### code chunk number 55: RSeminar2.Rnw:659-660\n###################################################\ndim(sleepstudy)\n\n\n###################################################\n### code chunk number 56: RSeminar2.Rnw:666-667\n###################################################\nblowdown = alr3::blowdown\n\n\n###################################################\n### code chunk number 57: RSeminar2.Rnw:669-670 \n###################################################\n?blowdown\n\n\n###################################################\n### code chunk number 58: RSeminar2.Rnw:675-676\n###################################################\nsummary(blowdown)\n\n\n###################################################\n### code chunk number 59: RSeminar2.Rnw:681-682\n###################################################\nsummary(blowdown$D)\n\n\n###################################################\n### code chunk number 60: RSeminar2.Rnw:687-688\n###################################################\nwith(blowdown,by(D,y,summary))\n\n\n###################################################\n### code chunk number 61: RSeminar2.Rnw:693-695\n###################################################\ncolMeans(blowdown[,-4])\n#rowMeans()\n\n\n###################################################\n### code chunk number 62: RSeminar2.Rnw:700-701\n###################################################\napply(blowdown[,-4],2,mean)\n\n\n###################################################\n### code chunk number 63: RSeminar2.Rnw:707-708\n###################################################\napply(blowdown[,-4],2,function(x) mean(abs(x-mean(x))))\n\n\n###################################################\n### code chunk number 64: RSeminar2.Rnw:713-716\n###################################################\nblowdownScaled = scale(blowdown[,-4])\napply(blowdownScaled,2,\n      function(x) round(c(mean=mean(x),sd=sd(x)),10))\n\n\n###################################################\n### code chunk number 65: RSeminar2.Rnw:723-726\n###################################################\nrequire(\"reshape2\")\n###Long form:\nhead(sleepstudy)\n\n\n###################################################\n### code chunk number 66: RSeminar2.Rnw:733-738\n###################################################\n###Wide form:\nsleepWide = acast(sleepstudy,Subject~factor(Days),\n                  value.var=\"Reaction\")\ndim(sleepWide)\nhead(round(sleepWide,1))\n\n\n###################################################\n### code chunk number 67: RSeminar2.Rnw:745-749\n###################################################\n###Back to tall form:\nsleepTall = melt(sleepWide,value.name=\"Reaction\")\ndim(sleepTall)\nhead(round(sleepTall,1))\n\n\n###################################################\n### code chunk number 68: RSeminar2.Rnw:754-756 \n###################################################\nwrite.csv(sleepWide,file=\"sleepWide.csv\")\nwrite.table(sleepWide,file=\"sleepWide.txt\",sep=\"\\t\")\n\n\n###################################################\n### code chunk number 69: RSeminar2.Rnw:771-774\n###################################################\nX = model.matrix(~Days,data=sleepstudy)\nclass(X)\ndim(X)\n\n\n###################################################\n### code chunk number 70: RSeminar2.Rnw:780-781\n###################################################\nqr(X)$rank\n\n\n###################################################\n### code chunk number 71: RSeminar2.Rnw:787-789\n###################################################\nXtX = t(X)%*%X\nall.equal(XtX,crossprod(X,X))  #Uses less memory\n\n\n###################################################\n### code chunk number 72: RSeminar2.Rnw:795-798\n###################################################\nXtXgenInv = MASS::ginv(XtX)\nXtXInv = chol2inv(chol(XtX))\nXtXInv = solve(XtX)\n\n\n###################################################\n### code chunk number 73: RSeminar2.Rnw:807-809\n###################################################\nXtXInv%*%t(X)%*%sleepstudy$Reaction\nlm(Reaction~Days,data=sleepstudy)$coef\n\n\n###################################################\n### code chunk number 74: RSeminar2.Rnw:832-833 \n###################################################\n?USJudgeRatings\n\n\n###################################################\n### code chunk number 75: RSeminar2.Rnw:840-848 \n###################################################\njudgesCent = scale(as.matrix(USJudgeRatings[,-1]),scale=FALSE)\nSigma = cov(judgesCent)\neigs = eigen(Sigma)\nScores = judgesCent %*% eigs$vectors[,1:2]\nplot(Scores,pch=16,ylim=c(-1,1)*2.5,xlab=\"\",ylab=\"\")\narrows(0,0,eigs$vec[,1]*3,eigs$vec[,2]*3)\ntext(eigs$vec[,1:2]*3,labels=colnames(judgesCent),\n     adj=c(1,0))\n\n\n\n###################################################\n### code chunk number 77: RSeminar2.Rnw:897-899\n###################################################\nyMeans = as.numeric(with(blowdown,by(y,SPP,mean)))\nbarplot(yMeans,names.arg=levels(blowdown$SPP))\n\n\n###################################################\n### code chunk number 78: RSeminar2.Rnw:904-911 \n###################################################\npar(mfrow=c(1,2))\npie(yMeans,labels=levels(blowdown$SPP),\n    main=\"Survival rates\")\nplotrix::pie3D(yMeans,labels=levels(blowdown$SPP),\n               explode=0.1,\n               col=rgb(20/256,c(1:9*20)/256,120/256))\npar(mfrow=c(1,1))\n\n\n###################################################\n### code chunk number 81: RSeminar2.Rnw:931-932\n###################################################\nboxplot(blowdown$D)\n\n\n###################################################\n### code chunk number 82: RSeminar2.Rnw:937-938\n###################################################\nboxplot(blowdown$D,main=\"Blowdown data\",ylab=\"Diameter\")\n\n\n###################################################\n### code chunk number 83: RSeminar2.Rnw:943-947\n###################################################\npar(mfrow=c(1,2))\nwith(blowdown,by(D,y,boxplot,main=\"Blowdown data\",\n                 ylab=\"Diameter\"))\npar(mfrow=c(1,1))\n\n\n###################################################\n### code chunk number 84: RSeminar2.Rnw:952-955\n###################################################\nboxplot(blowdown$D~blowdown$y,main=\"Blowdown data\",\n        ylab=\"Diameter\",names=c(\"survive\",\"died\"),\n        cex.lab=1.5,cex.axis=1.5)\n\n\n###################################################\n### code chunk number 85: RSeminar2.Rnw:960-962\n###################################################\nhist(blowdown$D,main=\"Blowdown data\",xlab=\"\",\n        ylab=\"Diameter\",cex.lab=1.5,cex.axis=1.5)\n\n\n###################################################\n### code chunk number 87: RSeminar2.Rnw:974-976\n###################################################\nplot(density(blowdown$D),ylab=\"Diameter\",cex.lab=1.5,\n     cex.axis=1.5,main=\"blowdown data\")\n\n\n###################################################\n### code chunk number 89: RSeminar2.Rnw:989-992\n###################################################\nhist(blowdown$D,main=\"Blowdown data\",xlab=\"\",freq=FALSE,\n        ylab=\"Diameter\",cex.lab=1.5,cex.axis=1.5)\nlines(density(blowdown$D,bw=2.5),col=\"red\",lwd=2)\n\n\n###################################################\n### code chunk number 90: RSeminar2.Rnw:997-999\n###################################################\nplot(ecdf(blowdown$D),main=\"Emp. Cum. Distn Func.\",\n     xlab=\"\",cex.lab=1.5)\n\n\n###################################################\n### code chunk number 91: RSeminar2.Rnw:1010-1013\n###################################################\nDRfun = function(dose){\n  return( 1-exp(-2.18E-04*dose) )\n}\n\n\n###################################################\n### code chunk number 92: RSeminar2.Rnw:1024-1027\n###################################################\ncurve(DRfun(x),from=0,to=50000,xlab=\"Dose\",\n      ylab=\"Probability of Infection\",cex.lab=1.5,\n      cex.axis=1.5,lwd=2)\n\n\n###################################################\n### code chunk number 94: RSeminar2.Rnw:1046-1052\n###################################################\nset.seed(123)\nx1 = rnorm(100)\nx2 = rgamma(100,5,10)\npar(mfrow=c(1,2))\nqqnorm(x1);qqline(x1)\nqqnorm(x2);qqline(x2)\n\n\n\n###################################################\n### code chunk number 96: RSeminar2.Rnw:1072-1077\n###################################################\npar(mfrow=c(1,2))\nqqplot(qgamma(ppoints(500),5,10),x1)\nqqline(x1,distribution=function(p)qgamma(p,5,10))\nqqplot(qgamma(ppoints(500),5,10),x2)\nqqline(x2,distribution=function(p)qgamma(p,5,10))\npar(mfrow=c(1,1))\n\n\n###################################################\n### code chunk number 97: RSeminar2.Rnw:1087-1090 \n###################################################\nclass(ldeaths) #From datasets package\nplot(ldeaths,ylab=\"# Deaths\")\nplot(stl(ldeaths,s.window=\"periodic\"))\n\n\n###################################################\n### code chunk number 100: RSeminar2.Rnw:1128-1129\n###################################################\npairs(airquality)\n\n\n###################################################\n### code chunk number 101: RSeminar2.Rnw:1136-1138\n###################################################\nplot(Ozone~Solar.R,data=airquality,xlab=\"Solar Radiation\",\n     ylab=\"Ozone\",pch=16)\n\n\n###################################################\n### code chunk number 102: RSeminar2.Rnw:1145-1153 \n###################################################\n###################################################\n### code chunk number 103: RSeminar2.Rnw:1161-1169\n###################################################\nCEXs = seq(0.5,5,length.out=500)\nCEXs = with(airquality,\n            CEXs[length(CEXs)*(max(Wind)+1-Wind)/\n                   (max(Wind)+1)])\nwith(airquality,\n     plot(Ozone~Solar.R,xlab=\"Solar Radiation\",\n     ylab=\"Ozone\",pch=16,cex=CEXs,col=Month,\n     cex.lab=1.5,cex.axis=1.5))\n\n\n###################################################\n### code chunk number 105: RSeminar2.Rnw:1189-1199\n###################################################\nwith(airquality,sapply(unique(Month),\n      function(x){ind=which(Month==x);\n                  abline(lm(Ozone[ind]~Solar.R[ind]),\n                         col=x,lwd=3)}))\nwith(airquality,legend(\"topleft\",lwd=rep(4,5),cex=1.5,\n       col=unique(Month),legend=unique(Month)))\n\n\n###################################################\n### code chunk number 106: RSeminar2.Rnw:1206-1213 \n###################################################\nplot(sleepTall$Reaction~sleepTall$Var2,pch=16,\n     xlab=\"Days of sleep deprivation\",\n     ylab=\"Reaction time\",cex.lab=1.5,cex.axis=1.5)\nfor(i in 1:nrow(sleepWide)){\n  lines(sleepWide[i,]~c(0:9))\n}\nlines(colMeans(sleepWide)~c(0:9),col=\"blue\",lwd=4,lty=2)\n\n\n###################################################\n### code chunk number 108: RSeminar2.Rnw:1234-1240 \n###################################################\ncurve(dnorm(x,-1.5),-4.5,3.5)\nxseq = seq(0,3.5,length.out=500)\nyseq = dnorm(xseq,-1.5)\npolygon(x=c(xseq,xseq[length(xseq):1],0),\n        y=c(yseq,rep(0,length(xseq)+1)),\n        col=rgb(0.25,0.75,1,alpha=0.5))\n\n\n###################################################\n### code chunk number 110: RSeminar2.Rnw:1260-1264 \n###################################################\n?text\n?segments\n?arrows\n?symbols\n\n\n###################################################\n### code chunk number 111: RSeminar2.Rnw:1271-1276 \n###################################################\n?jpeg\n?pdf\n?png\n?bmp\n?tiff\n\n\n###################################################\n### code chunk number 112: RSeminar2.Rnw:1280-1283 \n###################################################\n## jpeg(\"foo.jpg\",height=800,width=800)#in pixels\n## plot( ... )\n## dev.off()\n\n\n###################################################\n### code chunk number 114: RSeminar2.Rnw:1316-1323\n###################################################\nrequire(\"ggplot2\")\nblowdown$y <- \n  factor(blowdown$y,labels=c(\"Surv\",\"Died\"))\nggplot(blowdown,aes(factor(y),D))+\n  geom_boxplot()+\n  theme(axis.text=element_text(size=20),\n        axis.title=element_text(size=0,colour=\"white\"))\n\n\n###################################################\n### code chunk number 116: RSeminar2.Rnw:1342-1346\n###################################################\nggplot(blowdown,aes(D,fill=SPP))+\n  geom_histogram()+\n  theme(axis.text=element_text(size=20),\n        axis.title=element_text(size=0,colour=\"white\"))\n\n\n###################################################\n### code chunk number 118: RSeminar2.Rnw:1365-1369\n###################################################\nggplot(blowdown,aes(D,fill=SPP,colour=SPP))+\n  geom_density(alpha=0.1)+\n  theme(axis.text=element_text(size=20),\n        axis.title=element_text(size=0,colour=\"white\"))\n\n\n###################################################\n### code chunk number 120: RSeminar2.Rnw:1388-1392\n###################################################\nggplot(blowdown,aes(D,fill=SPP,colour=SPP))+\n  geom_density(position=\"stack\")+\n  theme(axis.text=element_text(size=20),\n        axis.title=element_text(size=0,colour=\"white\"))\n\n\n###################################################\n### code chunk number 122: RSeminar2.Rnw:1411-1416\n###################################################\nggplot(airquality,aes(Solar.R,Ozone))+\n  geom_point(size=6,aes(color=Temp))+\n  geom_smooth(method=\"lm\")+\n  theme(axis.text=element_text(size=20),\n        axis.title=element_text(size=0,colour=\"white\"))\n\n\n###################################################\n### code chunk number 113: RSeminar2.Rnw:1435-1449 \n###################################################\nrequire(\"emdbook\")\nrequire(\"plot3D\")\n\nnormMix = function(x,y){\n  mixProbs = c(1/3,1/2,1/6)\n  ret = dnorm(x,-2)*dnorm(y,-2) +\n    dnorm(x,0)*dnorm(y,2) +\n    dnorm(x,2)*dnorm(y,0)\n  return(ret)\n}\ncurve3d(normMix(x,y),from=c(-5,-5),to=c(5,5),sys3d=\"contour\",\n        xlab=\"\",ylab=\"\",labcex=1.5,nlevels=20)\ncurve3d(normMix(x,y),from=c(-5,-5),to=c(5,5),sys3d=\"persp\",theta=-15,\n        xlab=\"\",ylab=\"\",zlab=\"\")\ncurve3d(normMix(x,y),from=c(-5,-5),to=c(5,5),sys3d=\"rgl\",\n        xlab=\"\",ylab=\"\",zlab=\"\",\n        col = rgb(20/256,60/256,120/256,0.5))\n\n\n###################################################\n### code chunk number 116: RSeminar2.Rnw:1490-1496 \n###################################################\nrequire(\"plot3D\");require(\"alr3\")\npollution = sniffer[,c(\"TankTemp\",\"TankPres\")]\npollution = data.frame(pollution,logy=log(sniffer$Y))\nwith(pollution,scatter3D(TankTemp,TankPres,logy,theta=45,\n                         phi=20,xlab=\"Temp\",ylab=\"Press\",\n                         zlab=\"Pollution\",pch=16))\n\n\n###################################################\n### code chunk number 118: RSeminar2.Rnw:1517-1521 \n###################################################\nwith(pollution,scatter3D(TankTemp,TankPres,logy,theta=45,\n                         phi=20,xlab=\"Temp\",ylab=\"Press\",\n                         zlab=\"Pollution\",pch=16,\n                         type=\"h\"))\n\n###################################################\n### code chunk number 120: RSeminar2.Rnw:1538-1552 \n###################################################\nfit = lm(logy~TankTemp+TankPres,data=pollution)\nxgrid=with(pollution,\n       seq(min(TankTemp),max(TankTemp),length.out=15))\nygrid=with(pollution,\n       seq(min(TankPres),max(TankPres),length.out=15))\nxygrid = expand.grid(TankTemp=xgrid,TankPres=ygrid)\nlogyPred = matrix(predict(fit,xygrid),15,15)\nfitPts = predict(fit)\nwith(pollution,\n     scatter3D(TankTemp,TankPres,logy,theta=45,\n               phi=20,xlab=\"Temp\",ylab=\"Press\",\n               zlab=\"Pollution\",pch=16,\n               surf=list(x=xgrid,y=ygrid,z=logyPred,\n               fit=fitPts,facets=NA)))\n\n\n###################################################\n### code chunk number 123: RSeminar2.Rnw:1594-1600\n###################################################\nrequire(\"plot3Drgl\")\nBDTab = table(cut(blowdown$D,seq(5,85,by=10),\n                  include.lowest=TRUE),\n              blowdown$SPP)\nhist3D(z=BDTab,col = rgb(20/256,60/256,120/256),\n       border = \"black\",shade = 0.4,space = 0.15,\n       xlab=\"Diameter\",ylab=\"Species\",zlab=\"\")\nplotrgl()\n\n\n###################################################\n### code chunk number 124: RSeminar2.Rnw:1640-1648\n###################################################\nRFun = function(n,start=1){\n  ret=0\n  for(i in start:n){\n    ret = ret + i\n  }\n  return(ret)\n}\nRFun(100) == 100*101/2\n\n\n###################################################\n### code chunk number 125: RSeminar2.Rnw:1655-1659\n###################################################\nrequire(\"compiler\")\nRFunComp = cmpfun(RFun)\nsystem.time(RFun(1e7))\nsystem.time(RFunComp(1e7))\n\n\n###################################################\n### code chunk number 126: RSeminar2.Rnw:1666-1680\n###################################################\nrequire(\"foreach\")\nrequire(\"doParallel\")\nregisterDoParallel(cl=2)\nsystem.time({\n  temp = foreach(i=c(5e6,1e7)) %dopar% {\n    if(i==5e6){\n      RFun(i)\n    }else{\n      RFun(i,5e6+1)\n    }\n  }\n  print(sum(unlist(temp)) == 1e7*(1e7+1)/2)\n})\nstopImplicitCluster()\n\n\n###################################################\n### code chunk number 127: RSeminar2.Rnw:1687-1698\n###################################################\nrequire(\"Rcpp\");require(\"inline\")\ncppFun = cxxfunction(signature(nFromR=\"integer\"),\n                     body='\nint n = Rcpp::as<int>(nFromR);\nint ret = 0;\nfor(int i=1;i<n+1;i++){\n  ret += i;\n}\nreturn wrap(ret);\n',plugin=\"Rcpp\")\ncppFun(100)\n\n\n###################################################\n### code chunk number 128: RSeminar2.Rnw:1703-1705\n###################################################\nsystem.time(RFun(1e7))\nsystem.time(cppFun(1e7))\n\n\n###################################################\n### code chunk number 129: RSeminar2.Rnw:1734-1737\n###################################################\nattach(blowdown)\ndim(blowdown)\nhead(blowdown)\n\n\n###################################################\n### code chunk number 130: RSeminar2.Rnw:1741-1742\n###################################################\nrm(list=setdiff(ls(),\"blowdown\"))\n\n\n###################################################\n### code chunk number 131: RSeminar2.Rnw:1746-1748\n###################################################\ny = factor(y,labels=c(\"Survived\",\"Died\"))\n( tab = table(SPP,y) )\n\n\n###################################################\n### code chunk number 132: RSeminar2.Rnw:1754-1756\n###################################################\nchisq.test(tab)\nprop.table(tab,1)\n\n\n###################################################\n### code chunk number 134: RSeminar2.Rnw:1775-1784\n###################################################\nimage(t(prop.table(tab,1)),xaxt=\"n\",yaxt=\"n\",\n      main=\"Tree Species and Survival\")\nbox()\naxis(1,at=0:1,labels=levels(y),cex.axis=1.5)\naxis(2,at=seq(1,0,length.out=length(levels(SPP))),\n     labels=levels(SPP),las=1,cex.axis=1.5)\ntext(cbind(rep(0:1,each=length(levels(SPP))),\n          rep(seq(0,1,length.out=length(levels(SPP))),2)),\n     labels=round(c(prop.table(tab,1)),2),cex=1.5)\n\n\n###################################################\n### code chunk number 135: RSeminar2.Rnw:1790-1792\n###################################################\nlogD = log(D)\nt.test(logD~y,var.equal=FALSE)\n\n\n###################################################\n### code chunk number 137: RSeminar2.Rnw:1806-1809\n###################################################\npar(mfrow=c(1,2))\nby(logD,y,qqnorm)\npar(mfrow=c(1,1))\n\n\n###################################################\n### code chunk number 138: RSeminar2.Rnw:1816-1817\n###################################################\nkruskal.test(logD,y)\n\n\n###################################################\n### code chunk number 140: RSeminar2.Rnw:1834-1839\n###################################################\nind=which(y==\"Died\")\nplot(density(x=logD[ind]),ylim=c(0,0.9),\n     main=\"log(Diameter)\")\nlines(density(x=logD[-ind]),lty=2)\nlegend(\"topright\",legend=c(\"Died\",\"Survived\"),lty=1:2)\n\n\n###################################################\n### code chunk number 141: RSeminar2.Rnw:1846-1847\n###################################################\nboxplot(logD~SPP)\n\n\n###################################################\n### code chunk number 142: RSeminar2.Rnw:1853-1855\n###################################################\nlmMod= lm(logD~SPP)\nanova(lmMod)\n\n\n###################################################\n### code chunk number 143: RSeminar2.Rnw:1861-1862\n###################################################\nsummary(lmMod)\n\n\n###################################################\n### code chunk number 145: RSeminar2.Rnw:1876-1878\n###################################################\nqqnorm(resid(lmMod));qqline(resid(lmMod))\nplot(resid(lmMod)~fitted(lmMod));abline(h=0)\n\n\n###################################################\n### code chunk number 148: RSeminar2.Rnw:1899-1902\n###################################################\nplot(density(x=S),ylim=c(0,2.25),main=\"Storm Severity\")\nlines(density(x=S[-ind]),lty=2)\nlegend(\"topright\",legend=c(\"Died\",\"Survived\"),lty=1:2)\n\n\n###################################################\n### code chunk number 149: RSeminar2.Rnw:1909-1910\n###################################################\n( logRegMod = glm(y~logD + SPP + S, family=binomial) )\n\n\n###################################################\n### code chunk number 150: RSeminar2.Rnw:1915-1916\n###################################################\nround(summary(logRegMod)$coef,4)\n\n\n###################################################\n### code chunk number 151: RSeminar2.Rnw:1924-1926\n###################################################\n( probRegMod = glm(y~logD + SPP + S, \n                   family=binomial(link=\"probit\")) )\n\n\n###################################################\n### code chunk number 152: RSeminar2.Rnw:1932-1933\n###################################################\nsummary(probRegMod)$coef\n\n\n###################################################\n### code chunk number 154: RSeminar2.Rnw:1958-1969\n###################################################\nlogitFun = function(x,y){\n  eta = logRegMod$coef[\"(Intercept)\"] +\n    logRegMod$coef[\"SPPBS\"]+logRegMod$coef[\"logD\"]*x+\n    logRegMod$coef[\"S\"]*y\n  return(1/(1+exp(-eta)))\n}\nwith(blowdown,\n     curve3d(logitFun,from=c(min(logD),min(S)),\n             to=c(max(logD),max(S)),sys3d=\"persp\",\n             theta=-20,xlab=\"Diameter\",ylab=\"Storm\",\n             zlab=\"Probability of Dying\"))\n\n\n###################################################\n### code chunk number 156: RSeminar2.Rnw:1995-1999\n###################################################\nyr <- floor(tt <- time(mdeaths))\nplot(ldeaths,ylab=\"\",\n     xy.labels=paste(month.abb[12*(tt-yr)],\n                     yr-1900,sep=\"'\"))\n\n\n###################################################\n### code chunk number 157: RSeminar2.Rnw:2037-2053\n###################################################\nrequire(\"MCMCpack\")\nfun1= function(y,nsims=1000,stepsAhead=100){\n  TT = length(y)\n  BB = sum(y[-TT]^2)\n  bb = sum(y[-1]*y[-TT])/BB\n  Qb = sum((y[-1]-bb*y[-TT])^2)\n  \n  s2 = rinvgamma(nsims,shape=0.5*(TT-3),scale=0.5*Qb)\n  phi = rnorm(nsims,mean=bb,sd=sqrt(s2/BB))\n  ypred = matrix(0.0,nsims,stepsAhead)\n  ypred[,1]=rnorm(nsims,phi*y[TT],sd=sqrt(s2))\n  for(tt in 2:stepsAhead){\n    ypred[,tt] = rnorm(nsims,phi*ypred[,tt-1],sd=sqrt(s2))\n  }\n  return(list(s2=s2,phi=phi,ypred=ypred))\n}\n\n\n###################################################\n### code chunk number 158: RSeminar2.Rnw:2061-2077\n###################################################\nset.seed(1)\nM=1000\nphiTrue = 0.75\ns2True = 0.5\nTT=500\nY = matrix(NA,M,TT+1)\nY[,1]=rnorm(M,sd=sqrt(s2True/(1-phiTrue^2)))\nphiHat = s2Hat = numeric(M)\nfor(tt in 1+1:TT){\n  Y[,tt] = 0.75*Y[,tt-1] + rnorm(M,sd=sqrt(s2True))\n}\nfor(iter in 1:M){\n  temp = fun1(Y[iter,],stepsAhead=2)\n  s2Hat[iter] = mean(temp$s2)\n  phiHat[iter] = mean(temp$phi)\n}\n\n\n###################################################\n### code chunk number 159: RSeminar2.Rnw:2083-2087 \n###################################################\nhist(phiHat)\nabline(v=phiTrue,col=\"red\",lwd=2)\nhist(s2Hat)  \nabline(v=s2True,col=\"red\",lwd=2)\n\n\n###################################################\n### code chunk number 162: RSeminar2.Rnw:2107-2120 \n###################################################\nldeaths1 = ldeaths-mean(ldeaths)\nfit1 = fun1(ldeaths1,nsims=1e5,stepsAhead=12)\nypreds = colMeans(fit1$ypred)+mean(ldeaths)\nyBounds = t(apply(fit1$ypred,2,quantile,\n                probs=c(0.025,0.975)))+mean(ldeaths)\nYL = range(c(ldeaths,yBounds))\nplot(c(ldeaths),ylab=\"\",xlab=\"\",type=\"l\",\n     xlim=c(1,(length(ldeaths)+12)),ylim=YL,lwd=2)\nlines(ypreds~c(length(ldeaths)+1:12),col=\"red\",lwd=2)\nlines(yBounds[,1]~c(length(ldeaths)+1:12),col=\"blue\",\n      lwd=2,lty=2)\nlines(yBounds[,2]~c(length(ldeaths)+1:12),col=\"blue\",\n      lwd=2,lty=2)\n\n\n###################################################\n### code chunk number 165: RSeminar2.Rnw:2159-2165\n###################################################\nTT = length(ldeaths1);  BB = sum(ldeaths1[-TT]^2);  \nbb = sum(ldeaths1[-1]*ldeaths1[-TT])/BB;  \nQb = sum((ldeaths1[-1]-bb*ldeaths1[-TT])^2)\ncurve(dgamma(x,shape=0.5*(TT-3),scale=0.5*Qb),\n      lwd=2,xlab=expression(sigma^2),from=0,to=5e8,\n      ylab=\"\",cex.axis=1.5,cex.lab=1.5)\n\n\n###################################################\n### code chunk number 166: RSeminar2.Rnw:2170-2173\n###################################################\ncurve(dnorm(x,bb,sd=sqrt(mean(fit1$s2)/BB)),\n      lwd=2,xlab=expression(phi),from=0,to=1,\n      ylab=\"\",cex.axis=1.5,cex.lab=1.5)\n\n\n###################################################\n### code chunk number 167: RSeminar2.Rnw:2180-2182\n###################################################\nrequire(\"compiler\")\nfun1Comp = cmpfun(fun1)\n\n\n###################################################\n### code chunk number 168: RSeminar2.Rnw:2198-2242\n###################################################\nrequire(\"RcppArmadillo\");require(\"inline\")\nfuncpp = cxxfunction(\n  signature(YY=\"numeric\",NSIMS=\"integer\",STEPSAHEAD=\"integer\"),\n  body='\n\n//Environment stats(\"package:stats\");\n//Function rnorm = stats[\"rnorm\"];\nEnvironment MCMCpack(\"package:MCMCpack\");\nFunction rinvgamma = MCMCpack[\"rinvgamma\"];\n\narma::colvec yy = Rcpp::as<arma::colvec>(YY);\nint nsims = Rcpp::as<int>(NSIMS);\nint stepsAhead = Rcpp::as<int>(STEPSAHEAD);\nint TT = yy.n_rows;\ndouble BB=0, bb=0, Qb=0, sig=0;\n\nfor(int tt=1;tt<TT;tt++){\n  BB += pow(yy(tt-1),2);\n  bb += yy(tt)*yy(tt-1);\n}\nbb = bb/BB;\n\nfor(int tt=1;tt<TT;tt++){\n  Qb += pow( yy(tt)-bb*yy(tt-1) ,2);\n}\n\narma::colvec s2 = Rcpp::as<arma::colvec>(rinvgamma(nsims,0.5*(TT-3),0.5*Qb));\narma::colvec phi = arma::randn(nsims);\nfor(int i=0;i<nsims;i++){\n  phi(i) = bb + sqrt(s2(i)/BB)*phi(i);\n}\n\narma::mat ypreds = arma::randn(nsims,stepsAhead);\nfor(int i=0;i<nsims;i++){\nsig = sqrt(s2(i));\nypreds(i,0) = phi(i)*yy(TT-1)+sig*ypreds(i,0);\nfor(int tt=1;tt<stepsAhead;tt++){\nypreds(i,tt) = phi(i)*ypreds(i,tt-1) + sig*ypreds(i,tt);\n}\n}\n\nreturn Rcpp::List::create(wrap(ypreds),wrap(phi));\n\n  ',plugin=\"RcppArmadillo\")\n\n\n###################################################\n### code chunk number 169: RSeminar2.Rnw:2248-2260\n###################################################\nsystem.time({for(it in 1:100){\n  Rsims = fun1(Y[1,])\n  }\n})\nsystem.time({for(it in 1:100){\n  RsimsComp = fun1Comp(Y[1,])\n  }\n})\nsystem.time({for(it in 1:100){\n  Rcppsims = funcpp(Y,NSIMS=1000,STEPSAHEAD=100)\n  }\n})\n\n\n",
    "created" : 1461422298265.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1136492753",
    "id" : "EA8E78B8",
    "lastKnownWriteTime" : 1461246003,
    "last_content_update" : 1461422518089,
    "path" : "~/Programming/RSeminar/RSeminarScript.R",
    "project_path" : "RSeminarScript.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}