v <- c("Hello", "World")
class(v)
names(v)
??names
fac1 <- factor(rep(1:3, 3), labels=paste("Drug", 1:3, sep=""))
fac1
fac1["Drug1"]
fac1$"Drug1"
fac1["Drug1"]
??factor
mat3 = matrix(1:6,2,3,byrow=TRUE
;
mat3 = matrix(1:6,2,3,byrow=TRUE)
mat3[1:3]
??transpose
t(mat3)
mat3
mat3t <- t(mat3)
mat3[2] <- "Foo"
mat3
mat3t
rep(LETTERS[1:3], 2)
rep(LETTERS[1:3], each=3)
which(1:10, function(x) { x % 3 == 0 })
which(1:10, function(x) { x % 3 = 0 })
?which
which(1:10 %% 3 == 0)
which(1:10 %% 3)
which(1:10 %% 3 == 1)
which(1:10 %% 3 == 2)
set.seed(1)
uu=runif(1)
uu
runif
runif(3)
rnd
rand
rnorm
sleepstudy = read.csv("http://myweb.uiowa.edu/dksewell/sleepstudy.csv")
sleepstudy
test = read.table("http://myweb.uiowa.edu/dksewell/sleepstudy.csv",
sep=",",header=TRUE)
all.equal(sleepstudy, test)
test
sleepstudy
??xlsx
??excel
require("xlsx")
install.packages("xlsx")
require("xlsx")
require("xlsx")
install.packages('rJava')
sleepstudy = read.csv("http://myweb.uiowa.edu/dksewell/sleepstudy.csv")
blowdown = alr3::blowdown
install.packages(alr3)
install.packages("alr3")
install.packages(alr3)
blowdown = alr3::blowdown
blowdown
blowdownScaled = scale(blowdown[,-4])
blowdownScaled
apply(blowdownScaled, 2, function(x) round(c(mean=mean(x), sd=sd(x)), 10))
apply(blowdownScaled, 2, function(x) round(c(mean=mean(x), sd=sd(x)), 10))
apply(blowdownScaled, 2, function(x) round(c(mean=mean(x), sd=sd(x)), 5))
apply(blowdownScaled, 2, function(x) round(c(mean=mean(x), sd=sd(x)), 1))
apply(blowdownScaled, 2, function(x) round(c(mean=mean(x), sd=sd(x)), 10))
head(sleepstudy)
factor(Days)
pairs(airquality)
airquality
plot(Ozone~Solar.R,data=airquality,xlab="Solar Radiation",
ylab="Ozone",pch=16)
plot(Solar.R~Ozone~Solar.R,data=airquality,xlab="Solar Radiation",
ylab="Ozone",pch=16)
plot(Solar.R~Ozone,data=airquality,xlab="Solar Radiation",
ylab="Ozone",pch=16)
View(blowdownScaled)
View(blowdown)
View(blowdown)
View(blowdown)
library(ggplot2)
mtcars
qplot(mtcars$mpg)
library(ggplot2)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(mtcars$mpg)
qplot(cyl, mpg, data=mtcars)
qplot(mpg, qsec, data=mtcars)
qplot(mpg, qsec, facets=gear-cyl, data=mtcars)
qplot(wt, mpg, data=mtcars, geom="smooth")
qplot(mpg, data=mtcars, geom="density")
qplot(wt, mpg, data=mtcars, geom=c("smooth", "point"))  # Smooth Line (Ribbon)
qplot(mpg, qsec, data=mtcars, geom=c("smooth", "point"))  # Smooth Line (Ribbon)
method="lm")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),
method="lm")
??qplot
?qplot
qplot(wt, mpg, data=mtcars, geom=c("boxplot", "jitter"), fill=gear)
?qplot
mtCars2 <- mtcars
mtcars2$cyl <- factor(mtcars$cyl, levels=c(4,6,8), labels=c("4cyl", "6cyl", "8cyl"))
mtcars2
mtCars2
mtCars2$cyl <- factor(mtcars$cyl, levels=c(4,6,8), labels=c("4cyl", "6cyl", "8cyl"))
mtcars2$cyl
mtCars2$cyl
mtcars$cyl
qplot(gear, mpg, data=mtcars, geom="boxplot")
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"), fill=gear)
qplot(gear, mpg, data=mtcars, geom="boxplot")
qplot(gear, mpg, data=mtCars2, geom="boxplot")
qplot(gear, mpg, data=mtCars2, geom=c("boxplot", "jitter"), fill=gear)
qplot(cyl, mpg, data=mtCars2, geom=c("boxplot", "jitter"), fill=gear)
qplot(cyl, mpg, data=mtCars2, geom=c("boxplot", "jitter"), fill=cyl)
